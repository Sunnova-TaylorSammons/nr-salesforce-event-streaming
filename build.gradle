/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.6.2/userguide/java_library_plugin.html
 */

//plugins {
//    // Apply the java-library plugin to add support for Java Library
//    id 'java-library'
//    id 'eclipse'
//    id 'distribution'
//}

apply plugin: 'java'
apply plugin: 'distribution'
apply plugin: 'project-report'
repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
 jcenter()
  
}

group = 'com.newrelic.fit'
version = '1.1.0'

dependencies {

	// https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
	compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
	
	compile 'com.newrelic.experts:insights_client:1.0.9'
    compile "com.newrelic.experts:infra_publish:${project['infra_publish.version']}"

    // https://mvnrepository.com/artifact/org.cometd.java/cometd-java-client
    compile group: 'org.cometd.java', name: 'cometd-java-client', version: '4.0.4'

	compile group: 'org.yaml', name: 'snakeyaml', version: '1.25'
	
	// https://mvnrepository.com/artifact/org.json/json
	compile group: 'org.json', name: 'json', version: '20190722'    
	
    compile fileTree(dir: 'lib', include: ['*.jar'])

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

jar {
    dependsOn configurations.runtime
    from {
        (configurations.runtime).collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    manifest {
        attributes "Main-Class": "com.newrelic.fit.empcon.Main",
                    'Implementation-Title' : 'NewRelic monitor for EMP connector',
                    'Implementation-Version' : version

    }
    archiveName 'nri-empcon.jar'
}

// disable generating zip file along with tar.gz
distZip.enabled = false

distributions {
    main {
        baseName = 'nri-empcon'
        contents {
            into('lib'){
                from jar
            }
			into('config') {
                from 'config'
                include 'empcon-config.yml.sample'
                include 'empcon-config.yml.sample_password_obfuscation'
                include 'logback.xml'
            }
            into('sampleData') {
                from 'sampleData'
                include 'Newrelic_Insight_Event.json'
                include 'Salesforce_Stream_Event.json'

            }
            from 'README.md'
            from 'nri-empcon.sh'
        }
    }

}

// generate compressed tar.gz distribution file
plugins.withType(DistributionPlugin) {
  distTar {
    compression = Compression.GZIP
    extension = 'tar.gz'
  }
}
